{"ast":null,"code":"var _jsxFileName = \"/Users/farhanmolla/Desktop/finalWebDevFrontend/final-frontend/src/components/containers/EditTaskContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { fetchTaskThunk, editTaskThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditTaskContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //get new info for task from form input\n\n      let task = {\n        id: this.props.task.id,\n        description: this.state.description,\n        priority: this.state.priority,\n        completion: this.state.completion,\n        employeeId: this.state.employeeId\n      };\n      this.props.editTask(task);\n      this.setState({\n        redirect: true,\n        redirectId: this.props.task.id\n      });\n    };\n\n    this.state = {\n      description: \"\",\n      priority: \"\",\n      completion: \"\",\n      employeeId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    //getting task ID from url\n    this.props.fetchTask(this.props.match.params.id);\n    this.setState({\n      description: this.props.task.description,\n      priority: this.props.task.priority,\n      completion: this.props.task.completion,\n      employeeId: this.props.task.employeeId\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    //go to single task view of the edited task\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/task/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: 'center'\n      },\n      onSubmit: e => this.handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#11153e',\n          fontWeight: 'bold'\n        },\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: e => this.handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#11153e',\n          fontWeight: 'bold'\n        },\n        children: \"Priority Level: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"priority\",\n        value: this.state.priority,\n        onChange: e => this.handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#11153e',\n          fontWeight: 'bold'\n        },\n        children: \"Completion Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"completion\",\n        value: this.state.completion,\n        onChange: e => this.handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#11153e',\n          fontWeight: 'bold'\n        },\n        children: \"employeeId: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"employeeId\",\n        value: this.state.employeeId,\n        onChange: e => this.handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    task: state.task\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    editTask: task => dispatch(editTaskThunk(task)),\n    fetchTask: id => dispatch(fetchTaskThunk(id))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditTaskContainer);","map":{"version":3,"names":["Component","connect","Redirect","fetchTaskThunk","editTaskThunk","EditTaskContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","task","id","description","state","priority","completion","employeeId","editTask","redirect","redirectId","componentDidMount","fetchTask","match","params","componentWillUnmount","render","textAlign","e","color","fontWeight","mapState","mapDispatch","dispatch"],"sources":["/Users/farhanmolla/Desktop/finalWebDevFrontend/final-frontend/src/components/containers/EditTaskContainer.js"],"sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { fetchTaskThunk, editTaskThunk } from '../../store/thunks';\n\n\nclass EditTaskContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          description: \"\", \n          priority: \"\",\n          completion: \"\", \n          employeeId: null, \n          redirect: false, \n          redirectId: null\n        };\n    }\n\n    componentDidMount() {\n        //getting task ID from url\n        this.props.fetchTask(this.props.match.params.id);\n        this.setState({\n            description: this.props.task.description, \n            priority: this.props.task.priority,\n            completion: this.props.task.completion, \n            employeeId: this.props.task.employeeId,\n        });\n      }\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        //get new info for task from form input\n        let task = {\n            id: this.props.task.id,\n            description: this.state.description,\n            priority: this.state.priority,\n            completion: this.state.completion,\n            employeeId: this.state.employeeId\n        };\n        \n        this.props.editTask(task);\n\n        this.setState({\n          redirect: true, \n          redirectId: this.props.task.id\n        });\n\n    }\n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n\n    render() {\n      //go to single task view of the edited task\n        if(this.state.redirect) {\n          return (<Redirect to={`/task/${this.state.redirectId}`}/>)\n        }\n\n        return (\n            <form style={{textAlign: 'center'}} onSubmit={(e) => this.handleSubmit(e)}>\n            <label style= {{color:'#11153e', fontWeight: 'bold'}}>Description: </label>\n            <input type=\"text\" name=\"description\" value={this.state.description} onChange ={(e) => this.handleChange(e)}/>\n            <br/>\n\n            <label style={{color:'#11153e', fontWeight: 'bold'}}>Priority Level: </label>\n            <input type=\"text\" name=\"priority\" value={this.state.priority} onChange={(e) => this.handleChange(e)}/>\n            <br/>\n  \n            <label style={{color:'#11153e', fontWeight: 'bold'}}>Completion Status: </label>\n            <input type=\"text\" name=\"completion\" value={this.state.completion} onChange={(e) => this.handleChange(e)} />\n            <br/>\n\n            <label style={{color:'#11153e', fontWeight: 'bold'}}>employeeId: </label>\n            <input type=\"text\" name=\"employeeId\" value={this.state.employeeId} onChange={(e) => this.handleChange(e)} />\n            <br/>\n  \n            <button type=\"submit\">\n              Submit\n            </button>\n\n          </form>\n        )\n    }\n}\n\n// map state to props\nconst mapState = (state) => {\n    return {\n      task: state.task,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editTask: (task) => dispatch(editTaskThunk(task)),\n        fetchTask: (id) => dispatch(fetchTaskThunk(id)),\n\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditTaskContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}